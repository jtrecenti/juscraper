[
  {
    "objectID": "reference/aggregators.jusbr.client.JusbrScraper.html",
    "href": "reference/aggregators.jusbr.client.JusbrScraper.html",
    "title": "aggregators.jusbr.client.JusbrScraper",
    "section": "",
    "text": "aggregators.jusbr.client.JusbrScraper(\n    verbose=0,\n    download_path=None,\n    sleep_time=0.5,\n    token=None,\n)\nRaspador para o JusBR (consulta unificada da PDPJ-CNJ). Este scraper interage com a API da Plataforma Digital do Poder Judiciario (PDPJ).\n\n\n\n\n\nName\nDescription\n\n\n\n\nauth\nDefine o token JWT para autenticacao e o decodifica para verificacao.\n\n\nauth_firefox\nAuthentication via Firefox.\n\n\ncpopg\nConsulta processos pelo numero CNJ (ou lista de numeros CNJ) via API nacional.\n\n\ndownload_documents\nDownloads document texts for processes in base_df.\n\n\n\n\n\naggregators.jusbr.client.JusbrScraper.auth(token)\nDefine o token JWT para autenticacao e o decodifica para verificacao.\n\n\n\naggregators.jusbr.client.JusbrScraper.auth_firefox()\nAuthentication via Firefox.\n\n\n\naggregators.jusbr.client.JusbrScraper.cpopg(id_cnj)\nConsulta processos pelo numero CNJ (ou lista de numeros CNJ) via API nacional.\n\n\n\naggregators.jusbr.client.JusbrScraper.download_documents(\n    base_df,\n    max_docs_per_process=None,\n)\nDownloads document texts for processes in base_df. Iterates through processes in base_df, extracts document metadata from the ‘detalhes’ column, fetches, and cleans document texts. Returns a DataFrame where each row is a document."
  },
  {
    "objectID": "reference/aggregators.jusbr.client.JusbrScraper.html#methods",
    "href": "reference/aggregators.jusbr.client.JusbrScraper.html#methods",
    "title": "aggregators.jusbr.client.JusbrScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nauth\nDefine o token JWT para autenticacao e o decodifica para verificacao.\n\n\nauth_firefox\nAuthentication via Firefox.\n\n\ncpopg\nConsulta processos pelo numero CNJ (ou lista de numeros CNJ) via API nacional.\n\n\ndownload_documents\nDownloads document texts for processes in base_df.\n\n\n\n\n\naggregators.jusbr.client.JusbrScraper.auth(token)\nDefine o token JWT para autenticacao e o decodifica para verificacao.\n\n\n\naggregators.jusbr.client.JusbrScraper.auth_firefox()\nAuthentication via Firefox.\n\n\n\naggregators.jusbr.client.JusbrScraper.cpopg(id_cnj)\nConsulta processos pelo numero CNJ (ou lista de numeros CNJ) via API nacional.\n\n\n\naggregators.jusbr.client.JusbrScraper.download_documents(\n    base_df,\n    max_docs_per_process=None,\n)\nDownloads document texts for processes in base_df. Iterates through processes in base_df, extracts document metadata from the ‘detalhes’ column, fetches, and cleans document texts. Returns a DataFrame where each row is a document."
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Referência da API",
    "section": "",
    "text": "Interface pública para acessar os scrapers.\n\n\n\nscraper\nFactory that returns the correct scraper.\n\n\n\n\n\n\nClasses para coletar dados de agregadores de jurisprudência.\n\n\n\naggregators.datajud.client.DatajudScraper\nScraper for CNJ’s Datajud API.\n\n\naggregators.jusbr.client.JusbrScraper\nRaspador para o JusBR (consulta unificada da PDPJ-CNJ).\n\n\n\n\n\n\nClasses para coletar dados de tribunais específicos.\n\n\n\ncourts.tjsp.client.TJSPScraper\nMain scraper for Tribunal de Justica de Sao Paulo.\n\n\ncourts.tjdft.client.TJDFTScraper\nScraper for the Court of Justice of the Federal District and Territories (TJDFT).\n\n\ncourts.tjrs.client.TJRSScraper\nScraper for the Tribunal de Justiça do Rio Grande do Sul.\n\n\ncourts.tjpr.client.TJPRScraper\nScraper for the Court of Justice of Paraná.",
    "crumbs": [
      "Home",
      "Referência da API"
    ]
  },
  {
    "objectID": "reference/index.html#função-principal",
    "href": "reference/index.html#função-principal",
    "title": "Referência da API",
    "section": "",
    "text": "Interface pública para acessar os scrapers.\n\n\n\nscraper\nFactory that returns the correct scraper.",
    "crumbs": [
      "Home",
      "Referência da API"
    ]
  },
  {
    "objectID": "reference/index.html#scrapers-de-agregadores",
    "href": "reference/index.html#scrapers-de-agregadores",
    "title": "Referência da API",
    "section": "",
    "text": "Classes para coletar dados de agregadores de jurisprudência.\n\n\n\naggregators.datajud.client.DatajudScraper\nScraper for CNJ’s Datajud API.\n\n\naggregators.jusbr.client.JusbrScraper\nRaspador para o JusBR (consulta unificada da PDPJ-CNJ).",
    "crumbs": [
      "Home",
      "Referência da API"
    ]
  },
  {
    "objectID": "reference/index.html#scrapers-de-tribunais",
    "href": "reference/index.html#scrapers-de-tribunais",
    "title": "Referência da API",
    "section": "",
    "text": "Classes para coletar dados de tribunais específicos.\n\n\n\ncourts.tjsp.client.TJSPScraper\nMain scraper for Tribunal de Justica de Sao Paulo.\n\n\ncourts.tjdft.client.TJDFTScraper\nScraper for the Court of Justice of the Federal District and Territories (TJDFT).\n\n\ncourts.tjrs.client.TJRSScraper\nScraper for the Tribunal de Justiça do Rio Grande do Sul.\n\n\ncourts.tjpr.client.TJPRScraper\nScraper for the Court of Justice of Paraná.",
    "crumbs": [
      "Home",
      "Referência da API"
    ]
  },
  {
    "objectID": "reference/scraper.html",
    "href": "reference/scraper.html",
    "title": "scraper",
    "section": "",
    "text": "scraper(sigla, *args, **kwargs)\nFactory that returns the correct scraper.\n\n\n\n\n\nimport juscraper as jus tjsp = jus.scraper(“tjsp”) jusbr = jus.scraper(“jusbr”)"
  },
  {
    "objectID": "reference/scraper.html#examples",
    "href": "reference/scraper.html#examples",
    "title": "scraper",
    "section": "",
    "text": "import juscraper as jus tjsp = jus.scraper(“tjsp”) jusbr = jus.scraper(“jusbr”)"
  },
  {
    "objectID": "reference/courts.tjpr.client.TJPRScraper.html",
    "href": "reference/courts.tjpr.client.TJPRScraper.html",
    "title": "courts.tjpr.client.TJPRScraper",
    "section": "",
    "text": "courts.tjpr.client.TJPRScraper()\nScraper for the Court of Justice of Paraná.\n\n\n\n\n\nName\nDescription\n\n\n\n\ncjsg\nSearches for TJPR jurisprudence in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw results from the TJPR jurisprudence search (multiple pages).\n\n\ncjsg_parse\nExtracts relevant data from the HTMLs returned by TJPR.\n\n\ncpopg\nStub: Primeiro grau case consultation not implemented for TJPR.\n\n\ncposg\nStub: Segundo grau case consultation not implemented for TJPR.\n\n\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg(\n    query,\n    paginas=1,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    **kwargs,\n)\nSearches for TJPR jurisprudence in a simplified way (download + parse). Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg_download(\n    termo,\n    paginas=1,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n)\nDownloads raw results from the TJPR jurisprudence search (multiple pages). Returns a list of HTMLs (one per page).\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg_parse(resultados_brutos, criterio=None)\nExtracts relevant data from the HTMLs returned by TJPR. Returns a DataFrame with the decisions.\n\n\n\ncourts.tjpr.client.TJPRScraper.cpopg(id_cnj)\nStub: Primeiro grau case consultation not implemented for TJPR.\n\n\n\ncourts.tjpr.client.TJPRScraper.cposg(id_cnj)\nStub: Segundo grau case consultation not implemented for TJPR."
  },
  {
    "objectID": "reference/courts.tjpr.client.TJPRScraper.html#methods",
    "href": "reference/courts.tjpr.client.TJPRScraper.html#methods",
    "title": "courts.tjpr.client.TJPRScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncjsg\nSearches for TJPR jurisprudence in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw results from the TJPR jurisprudence search (multiple pages).\n\n\ncjsg_parse\nExtracts relevant data from the HTMLs returned by TJPR.\n\n\ncpopg\nStub: Primeiro grau case consultation not implemented for TJPR.\n\n\ncposg\nStub: Segundo grau case consultation not implemented for TJPR.\n\n\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg(\n    query,\n    paginas=1,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    **kwargs,\n)\nSearches for TJPR jurisprudence in a simplified way (download + parse). Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg_download(\n    termo,\n    paginas=1,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n)\nDownloads raw results from the TJPR jurisprudence search (multiple pages). Returns a list of HTMLs (one per page).\n\n\n\ncourts.tjpr.client.TJPRScraper.cjsg_parse(resultados_brutos, criterio=None)\nExtracts relevant data from the HTMLs returned by TJPR. Returns a DataFrame with the decisions.\n\n\n\ncourts.tjpr.client.TJPRScraper.cpopg(id_cnj)\nStub: Primeiro grau case consultation not implemented for TJPR.\n\n\n\ncourts.tjpr.client.TJPRScraper.cposg(id_cnj)\nStub: Segundo grau case consultation not implemented for TJPR."
  },
  {
    "objectID": "notebooks/tjrs.html",
    "href": "notebooks/tjrs.html",
    "title": "juscraper",
    "section": "",
    "text": "import juscraper as jus\n\n# cria um objeto tjrs\ntjrs = jus.scraper('tjrs')\n\n\n# baixa dados da jurisprudência\ndados_cjsg = tjrs.cjsg('golpe do pix', paginas=range(0,3))\n\nprint(dados_cjsg.shape)\ndados_cjsg.head(3)\n\nBaixando páginas TJRS: 100%|██████████| 3/3 [00:05&lt;00:00,  1.90s/it]\n\n\n(30, 33)\n\n\n\n\n\n\n\n\n\n\n\n\nprocesso\nrelator\norgao_julgador\ndata_julgamento\ndata_publicacao\nclasse_cnj\nassunto_cnj\ntribunal\ntipo_processo\nurl\n...\ncod_org_julg\ncod_redator\ncod_tipo_documento\ncod_tribunal\ncod_assunto_cnj\ncod_relator\ncod_recurso\ntipo_documento\ndthr_criacao\n_version_\n\n\n\n\n0\n52627181720248217000\nDeborah Coleto Assumpção de Moraes\nDécima Sexta Câmara Cível\n2025-05-08\n2025-05-08\nAgravo de Instrumento\nGestão de Negócios\nTribunal de Justiça do RS\nAgravo de Instrumento\nhttps://www.tjrs.jus.br/buscas/jurisprudencia/...\n...\n16\n652\n1\n3\n7713.0\n652\n296\nAcordao\n2025-05-12 08:31:24.0\n1831916254777049088\n\n\n1\n50134755820238210005\nCarmem Maria Azambuja Farias\nDécima Quinta Câmara Cível\n2025-05-07\n2025-05-14\nApelação\nBancários\nTribunal de Justiça do RS\nApelação Cível\nhttps://www.tjrs.jus.br/buscas/jurisprudencia/...\n...\n15\n697\n1\n3\n7752.0\n697\n224\nAcordao\nTue May 20 08:30:59 GMT-03:00 2025\n1832640764786507776\n\n\n2\n50018309020248210008\nClovis Moacyr Mattana Ramos\nDécima Quinta Câmara Cível\n2025-05-07\n2025-05-15\nApelação\nNone\nTribunal de Justiça do RS\nApelação Cível\nhttps://www.tjrs.jus.br/buscas/jurisprudencia/...\n...\n15\n439\n1\n3\nNaN\n439\n224\nAcordao\nTue May 20 08:32:06 GMT-03:00 2025\n1832640861230333952\n\n\n\n\n3 rows × 33 columns\n\n\n\n\nimport base64\nfrom IPython.display import display, HTML\n\ntxt = dados_cjsg['documento_text'].iloc[0]\ndecoded_bytes = base64.b64decode(txt)\ndecoded_str = decoded_bytes.decode('latin1', errors='replace')\n\n#display(HTML(decoded_str))\n\n\ndados_cjsg.columns\n\nIndex(['processo', 'relator', 'orgao_julgador', 'data_julgamento',\n       'data_publicacao', 'classe_cnj', 'assunto_cnj', 'tribunal',\n       'tipo_processo', 'url', 'ementa', 'documento_text', 'documento_tiff',\n       'ementa_text', 'mes_ano_publicacao', 'origem', 'secao',\n       'ano_julgamento', 'nome_relator', 'ind_segredo_justica',\n       'ementa_referencia', 'cod_ementa', 'cod_classe_cnj', 'cod_org_julg',\n       'cod_redator', 'cod_tipo_documento', 'cod_tribunal', 'cod_assunto_cnj',\n       'cod_relator', 'cod_recurso', 'tipo_documento', 'dthr_criacao',\n       '_version_'],\n      dtype='object')\n\n\n\ndados_cjsg['url'].iloc[0]\n\n'https://www.tjrs.jus.br/buscas/jurisprudencia/?numero_processo=52627181720248217000'",
    "crumbs": [
      "Home",
      "Exemplos",
      "Tribunais",
      "TJRS"
    ]
  },
  {
    "objectID": "notebooks/tjsp.html",
    "href": "notebooks/tjsp.html",
    "title": "Exemplo de uso",
    "section": "",
    "text": "Para usar o juscraper, rode algo assim:\n\nimport juscraper as jus\n\n# cria um objeto tjsp\ntjsp = jus.scraper('tjsp')\n\n\n# baixa dados da [c]onsulta de [j]ulgados de [p]rimeiro [g]rau - cjpg\ndados_cjpg = tjsp.cjpg('golpe do pix', paginas=range(0,3))\n\nprint(dados_cjpg.shape)\ndados_cjpg.head(3)\n\nBaixando documentos: 100%|██████████| 3/3 [00:01&lt;00:00,  1.76it/s]\nProcessando documentos: 100%|██████████| 3/3 [00:00&lt;00:00, 16.12it/s]\n\n\n(30, 10)\n\n\n\n\n\n\n\n\n\n\n\n\ncd_processo\nid_processo\nclasse\nassunto\nmagistrado\ncomarca\nforo\nvara\ndata_disponibilizacao\ndecisao\n\n\n\n\n0\n2S001Z0WK0000\n1015606-71.2025.8.26.0100\nProcedimento Comum Cível\nBancários\nFABIO DE SOUZA PIMENTA\nSÃO PAULO\nForo Central Cível\n32ª Vara Cível\n25/05/2025\nSENTENÇA\\n\\n\\n\\nProcesso nº:\\t1015606-71.2025....\n\n\n1\n07001NDXN0000\n1027253-85.2024.8.26.0007\nProcedimento do Juizado Especial Cível\nIndenização por Dano Moral\nANA LUCIA SCHMIDT RIZZON\nSÃO PAULO\nForo Regional VII - Itaquera\nVara do Juizado Especial Cível\n25/05/2025\nSENTENÇA\\n\\n\\n\\nProcesso Digital nº:\\t1027253-...\n\n\n2\n250005YE10000\n0003662-95.2024.8.26.0077\nProcedimento do Juizado Especial Cível\nObrigações\nERIC DOUGLAS SOARES GOMES\nBirigui\nForo de Birigui\nVara do Juizado Especial Cível e Criminal\n24/05/2025\nSENTENÇA\\n\\n\\n\\nProcesso Digital nº:\\t0003662-...\n\n\n\n\n\n\n\n\n# baixa dados da [c]onsulta de [j]ulgados de [s]egundo [g]rau - cjsg\ndados_cjsg = tjsp.cjsg('golpe do pix', paginas=range(0,3))\n\nprint(dados_cjsg.shape)\ndados_cjsg.head(3)\n\nBaixando documentos: 100%|██████████| 3/3 [00:02&lt;00:00,  1.47it/s]\nProcessando documentos: 100%|██████████| 3/3 [00:00&lt;00:00, 15.13it/s]\n\n\n(60, 10)\n\n\n\n\n\n\n\n\n\n\n\n\nprocesso\ncd_acordao\ncd_foro\nclasse_assunto\nrelatora\ncomarca\norgao_julgador\ndata_julgamento\ndata_publicacao\nementa\n\n\n\n\n0\n1022627-98.2024.8.26.0564\n19256246\n0\nApelação Cível / Bancários\nLuis Carlos de Barros\nSão Bernardo do Campo\nÓrgão julgador: 20ª Câmara de Direito Privado\n24/05/2025\n24/05/2025\nAção declaratória c.c. e indenizatória. Emprés...\n\n\n1\n1000149-71.2024.8.26.0346\n19256173\n0\nApelação Cível / Bancários\nPAULO SERGIO MANGERONA\nMartinópolis\nÓrgão julgador: Núcleo de Justiça 4.0 em Segun...\n24/05/2025\n24/05/2025\nAPELAÇÃO. Ação indenizatória. Golpe da falsa c...\n\n\n2\n1030211-78.2023.8.26.0007\n19254413\n0\nApelação Cível / Bancários\nDomingos de Siqueira Frascino\nSão Paulo\nÓrgão julgador: Núcleo de Justiça 4.0 em Segun...\n23/05/2025\n23/05/2025\nDIREITO DO CONSUMIDOR E CIVIL. APELAÇÃO CÍVEL....\n\n\n\n\n\n\n\n\nres = tjsp.cpopg(['1000149-71.2024.8.26.0346'])\nres\n\nBaixando processos: 100%|██████████| 1/1 [00:00&lt;00:00,  1.48it/s]\nProcessando documentos: 100%|██████████| 1/1 [00:00&lt;00:00,  4.62it/s]\n\n\n{'basicos':                                            file_path  \\\n 0  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...   \n \n                  id_processo                    classe  \\\n 0  1000149-71.2024.8.26.0346  Procedimento Comum Cível   \n \n                           assunto                  foro               vara  \\\n 0  Responsabilidade do Fornecedor  Foro de Martinópolis  2ª  Vara Judicial   \n \n                     juiz            data_distribuicao            valor_acao  \n 0  RENATA ESSER DE SOUZA  06/02/2024 às 13:47 - Livre  R$         81.439,78  ,\n 'partes':                                            file_path   tipo  \\\n 0  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  Reqte   \n 1  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  Reqda   \n \n                                                 nome  \\\n 0  Aparecida Stuani Advogada: Carina Akemi Rezend...   \n 1                                BANCO BRADESCO S.A.   \n \n                                    advogados  \n 0                                         []  \n 1  [Fabio Cabral Silva de Oliveira Monteiro]  ,\n 'movimentacoes':                                             file_path        data  \\\n 0   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  05/02/2025   \n 1   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  05/02/2025   \n 2   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  06/12/2024   \n 3   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  04/12/2024   \n 4   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  08/11/2024   \n ..                                                ...         ...   \n 71  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  09/02/2024   \n 72  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  09/02/2024   \n 73  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  08/02/2024   \n 74  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  07/02/2024   \n 75  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  06/02/2024   \n \n                                             movimento  \\\n 0   Remetidos os Autos para o Tribunal de Justiça/...   \n 1                                                       \n 2                                                       \n 3                               Contrarrazões Juntada   \n 4                     Certidão de Publicação Expedida   \n ..                                                ...   \n 71                    Certidão de Publicação Expedida   \n 72                                    Remetido ao DJE   \n 73                                                      \n 74                             Conclusos para Decisão   \n 75  Distribuído Livremente (por Sorteio) (moviment...   \n \n                                            observacao  \n 0                                                      \n 1        Processo Digital - Certidão Genérica - Cível  \n 2        Ato - remessa TJ - COM ATOS - NÃO PUBLICÁVEL  \n 3   Nº Protocolo: WMPO.24.70021232-2\\n\\nTipo da Pe...  \n 4   Relação: 0670/2024\\n\\nData da Publicação: 11/1...  \n ..                                                ...  \n 71  Relação: 0055/2024\\n\\nData da Publicação: 15/0...  \n 72  Relação: 0055/2024\\n\\nTeor do ato: Vistos. O a...  \n 73  Vistos. O artigo 5º, LXXIV, da Constituição Fe...  \n 74                                                     \n 75                                                     \n \n [76 rows x 4 columns],\n 'peticoes_diversas':                                             file_path        data  \\\n 0   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...               \n 1   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  14/02/2024   \n 2   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  19/03/2024   \n 3   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  21/03/2024   \n 4   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  10/04/2024   \n 5   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  23/04/2024   \n 6   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  25/04/2024   \n 7   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  25/04/2024   \n 8   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  29/04/2024   \n 9   C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  03/05/2024   \n 10  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  10/06/2024   \n 11  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  23/07/2024   \n 12  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  13/08/2024   \n 13  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  14/08/2024   \n 14  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  28/08/2024   \n 15  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  29/08/2024   \n 16  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  02/09/2024   \n 17  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  04/09/2024   \n 18  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  07/10/2024   \n 19  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  16/10/2024   \n 20  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  22/10/2024   \n 21  C:\\Users\\julio\\AppData\\Local\\Temp\\tmp2pp741rt\\...  04/12/2024   \n \n                              tipo  \n 0                                  \n 1                Emenda à Inicial  \n 2                     Contestação  \n 3   Pedido de Expedição de Ofício  \n 4           Petição Intermediária  \n 5                     Contestação  \n 6               Petições Diversas  \n 7                     Contestação  \n 8                     Contestação  \n 9                     Contestação  \n 10          Pedido de Habilitação  \n 11              Petições Diversas  \n 12          Petição Intermediária  \n 13            Indicação de Provas  \n 14              Petições Diversas  \n 15            Indicação de Provas  \n 16              Petições Diversas  \n 17              Petições Diversas  \n 18          Petição Intermediária  \n 19          Pedido de Habilitação  \n 20             Razões de Apelação  \n 21      Contrarrazões de Apelação  }\n\n\n\nres = tjsp.cposg(['00221752420038260344', '10001497120248260346', '00039417120248260048'])\nres\n\nBaixando processos: 100%|██████████| 3/3 [00:02&lt;00:00,  1.24it/s]\nProcessando arquivos: 100%|██████████| 4/4 [00:00&lt;00:00,  4.12it/s]\n\n\n\n\n\n\n\n\n\nid_original\nstatus\nclasse\nassunto\nsecao\norgao_julgador\narea\nrelator\norigem\nmovimentacoes\npartes\nhistorico\ndecisoes\ncomposicao\nprimeira_inst\nprocesso\nvalor_da_acao\nvolume_apenso\n\n\n\n\n0\nEmbargos de Declaração Criminal\\n\\t\\t\\n\\t\\t\\t ...\nEncerrado\nRecurso em Sentido Estrito\nDIREITO PENAL - Crime Tentado\nDireito Criminal\n16ª Câmara de Direito Criminal\nCriminal\nBORGES PEREIRA\nComarca de Marília / Foro de Marília / 3ª. Var...\n[{'data': '25/03/2015', 'movimento': '', 'desc...\n[{'id_parte': 1, 'nome': 'Jose Roberto dos Rei...\n[]\n[{'data': '20/03/2012', 'situacao': 'Julgado',...\n[{'participacao': 'Relator', 'magistrado': 'Bo...\n[{'id_1a_inst': '344.01.2003.022175-3', 'foro'...\nNone\nNone\nNone\n\n\n1\nEmbargos de Declaração Criminal\\n\\t\\t\\n\\t\\t\\t ...\nEncerrado\nApelação Criminal\nDIREITO PENAL-Crimes contra a vida-Homicídio S...\nDireito Criminal\n6ª Câmara de Direito Criminal\nCriminal\nMACHADO DE ANDRADE\nComarca de Marília / Foro de Marília / 1ª Vara...\n[{'data': '25/07/2022', 'movimento': '', 'desc...\n[{'id_parte': 1, 'nome': 'Rubens Neres Santana...\n[]\n[{'data': '01/08/2019', 'situacao': 'Julgado',...\n[{'participacao': 'Relator', 'magistrado': 'Ma...\n[{'id_1a_inst': '344.01.2003.022175-3', 'foro'...\nNone\nNone\nNone\n\n\n2\n1000149-71.2024.8.26.0346\nJulgado\nApelação Cível\nDIREITO DO CONSUMIDOR - Contratos de Consumo -...\nDireito Privado 2\nNúcleo de Justiça 4.0 em Segundo Grau – Turma ...\nCível\nPAULO SERGIO MANGERONA\nComarca de Martinópolis / Foro de Martinópolis...\n[{'data': '24/05/2025', 'movimento': '', 'desc...\n[{'id_parte': 1, 'nome': 'Fabio Cabral Silva d...\n[]\n[{'data': '24/05/2025', 'situacao': 'Julgado',...\n[{'participacao': 'Relator', 'magistrado': 'Pa...\n[{'id_1a_inst': '1000149-71.2024.8.26.0346(Pri...\nNone\n72.896,87\nNone",
    "crumbs": [
      "Home",
      "Exemplos",
      "Tribunais",
      "TJSP"
    ]
  },
  {
    "objectID": "notebooks/tjpr.html",
    "href": "notebooks/tjpr.html",
    "title": "juscraper",
    "section": "",
    "text": "import juscraper as jus\n\n# cria um objeto tjpr\ntjpr = jus.scraper('tjpr')\n\n\n# baixa dados da jurisprudência\ndados_cjsg = tjpr.cjsg('direito penal', paginas=range(0,3))\n\nprint(dados_cjsg.shape)\ndados_cjsg.head(3)\n\nBaixando páginas TJPR: 100%|██████████| 3/3 [00:00&lt;00:00, 12.50it/s]\n\n\n(30, 5)\n\n\n\n\n\n\n\n\n\nprocesso\norgao_julgador\nrelator\ndata_julgamento\nementa\n\n\n\n\n0\n0000919-43.2023.8.16.0169\n1ª Câmara Criminal - Núcleo de Atuação (Lei Ma...\nsubstituta fernanda karam de chueiri sanches\n2025-05-24\nConteúdo pendente de análise e liberação para ...\n\n\n1\n0001986-62.2017.8.16.0069\n1ª Câmara Criminal - Núcleo de Atuação (Lei Ma...\nsubstituta fernanda karam de chueiri sanches\n2025-05-24\nConteúdo pendente de análise e liberação para ...\n\n\n2\n0002335-56.2023.8.16.0101\n1ª Câmara Criminal - Núcleo de Atuação (Lei Ma...\nsubstituta fernanda karam de chueiri sanches\n2025-05-24\nConteúdo pendente de análise e liberação para ...\n\n\n\n\n\n\n\n\nprint(dados_cjsg['ementa'].iloc[23][:200])\n\nDIREITO\nPENAL\n. APELAÇÃO CRIMINAL. CRIME DE AMEAÇA NO ÂMBITO DE VIOLÊNCIA DOMÉSTICA. RECURSO DEFENSIVO. ALEGAÇÃO DE EXCLUDENTE DE ILICITUDE E PEDIDO SUBSIDIÁRIO DE DESCLASSIFICAÇÃO PARA CONTRAVENÇÃO\nP",
    "crumbs": [
      "Home",
      "Exemplos",
      "Tribunais",
      "TJPR"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "juscraper",
    "section": "",
    "text": "Raspador de tribunais e outros sistemas relacionados ao poder judiciário brasileiro.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instalação",
    "href": "index.html#instalação",
    "title": "juscraper",
    "section": "Instalação",
    "text": "Instalação\n\nVia PyPI (Recomendado)\npip install juscraper\n\n\nCom uv\nuv add juscraper\n\n\nVersão de Desenvolvimento\nPara instalar a versão mais recente do repositório:\npip install git+https://github.com/jtrecenti/juscraper.git",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#como-usar",
    "href": "index.html#como-usar",
    "title": "juscraper",
    "section": "Como usar",
    "text": "Como usar\nimport juscraper as jus\n\ntjsp = jus.scraper('tjsp')\ndados_cjpg = tjsp.cjpg('league of legends', paginas=range(1,3))\n\ndados_cjpg.head(3)\nO pacote foi pensado para atender a requisitos básicos de consulta de dados de processos judiciais em alguns tribunais.\nOs tribunais implementados vão apresentar os seguintes métodos:\n\n.cpopg(): consulta de processos originários do primeiro grau\n.cposg(): consulta de processos originários do segundo grau\n.cjsg(): consulta de jurisprudência\n\nOs métodos .cpopg() e .cposg() recebem como input um número de processo no padrão CNJ (NNNNNNN-DD.AAAA.J.TT.OOOO), com ou sem separadores, e retorna um dict com tabelas dos elementos do processo (dados básicos, partes, movimentações, entre outros específicos por tribunal).\nO método .cjsg() recebe como input parâmetros de busca de jurisprudência (que variam por tribunal) e retorna uma tabela com os resultados da consulta. Boa parte dos tribunais apresentam limites de paginação ao realizar buscas muito gerais (i.e. que retornam muitos resultados). Nesses casos, o método dará um aviso ao usuário com o número total de resultados, confirmando se deseja mesmo baixar todos os resultados.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#implementações",
    "href": "index.html#implementações",
    "title": "juscraper",
    "section": "Implementações",
    "text": "Implementações\n\nTribunais Disponíveis\n\n\n\nTribunal\nFuncionalidades Disponíveis\n\n\n\n\nTJSP\ncpopg, cposg, cjsg, cjpg, acordao\n\n\nTJRS\ncjsg\n\n\nTJPR\ncjsg\n\n\nTJDFT\ncjsg\n\n\n\n\n\nAgregadores Disponíveis\n\n\n\nNome\nFuncionalidades\n\n\n\n\nDatajud\nlistar_processos\n\n\nJusbr\ncpopg, download_documents\n\n\n\n\n\nNotebooks de Exemplo\n\nExemplo TJSP\nExemplo TJRS\nExemplo TJPR\nExemplo TJDFT\nExemplo Datajud\nExemplo Jusbr",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#informações-adicionais",
    "href": "index.html#informações-adicionais",
    "title": "juscraper",
    "section": "Informações adicionais",
    "text": "Informações adicionais\n\nDiferenciais do juscraper:\n\nControle sobre arquivos brutos: o pacote fornece uma interface para baixar e armazenar arquivos brutos (HTML e JSON, por exemplo) dos processos. Por padrão, no entanto, esses arquivos brutos são descartados assim que os dados são processados, com exceção dos arquivos que apresentaram algum problema na leitura.\n\n\n\nRestrições:\nPor ser um pacote bastante complexo e também nichado, adotamos algumas restrições sobre o escopo do pacote para que seja simples de usar.\n\nO pacote não utiliza paralelização, ou seja, se o usuário tiver interesse em realizar requisições em paralelo, deverá desenvolver as adaptações necessárias.\nO pacote não possui absolutamente todas as funcionalidades que os tribunais permitem. Se o usuário tiver interesse em consultar processos em mais tribunais, deverá desenvolver os raspadores.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#contribuição",
    "href": "index.html#contribuição",
    "title": "juscraper",
    "section": "Contribuição",
    "text": "Contribuição\nInteressado em contribuir? Verifique as diretrizes de contribuição no arquivo CONTRIBUTING.md. Por favor, note que este projeto é lançado com um Código de Conduta. Ao contribuir para este projeto, você concorda em obedecer às suas termos.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#licença",
    "href": "index.html#licença",
    "title": "juscraper",
    "section": "Licença",
    "text": "Licença\njuscraper foi criado por Julio Trecenti. Está licenciado sob os termos da licença MIT.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "notebooks/datajud.html",
    "href": "notebooks/datajud.html",
    "title": "Exemplo de uso",
    "section": "",
    "text": "Para usar o juscraper, rode algo assim:\n\nimport juscraper as jus\n\n# cria um objeto datajud\ndatajud = jus.scraper('datajud', verbose=False)\n\n\n\n# lista os processos\nprocessos = ['10092161720238260016', '00665754820248190000']\nlistagem = datajud.listar_processos(numero_processo=processos, mostrar_movs=True)\n\nprint(listagem.shape)\nlistagem.head(3)\n\n\n\n\n\n\n\n(2, 14)\n\n\n\n\n\n\n\n\n\nclasse\nnumeroProcesso\nsistema\nformato\ntribunal\ndataHoraUltimaAtualizacao\ngrau\n@timestamp\ndataAjuizamento\nmovimentos\nid\nnivelSigilo\norgaoJulgador\nassuntos\n\n\n\n\n0\n{'codigo': 241, 'nome': 'Petição Cível'}\n10092161720238260016\n{'codigo': 3, 'nome': 'SAJ'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJSP\n2025-01-10T17:30:41.793Z\nJE\n2025-02-07T17:38:06.012900843Z\n2023-04-26T11:27:34.000Z\n[{'complementosTabelados': [{'codigo': 2, 'val...\nTJSP_JE_10092161720238260016\n0\n{'codigo': 10608, 'nome': '02 VARA JUIZADO ESP...\n[{'codigo': 8893, 'nome': 'Atos Processuais'}]\n\n\n1\n{'codigo': 202, 'nome': 'Agravo de Instrumento'}\n00665754820248190000\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJRJ\n2025-05-08T14:03:27.957Z\nG2\n2025-05-29T22:14:11.517670660Z\n2024-08-16T15:07:06.000Z\n[{'complementosTabelados': [{'codigo': 4, 'val...\nTJRJ_G2_00665754820248190000\n0\n{'codigoMunicipioIBGE': 3304557, 'codigo': 856...\n[{'codigo': 10499, 'nome': 'Programa de Comput...\n\n\n\n\n\n\n\n\nlistagem = datajud.listar_processos(numero_processo=processos)\nlistagem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclasse\nnumeroProcesso\nsistema\nformato\ntribunal\ndataHoraUltimaAtualizacao\ngrau\n@timestamp\ndataAjuizamento\nid\nnivelSigilo\norgaoJulgador\nassuntos\n\n\n\n\n0\n{'codigo': 241, 'nome': 'Petição Cível'}\n10092161720238260016\n{'codigo': 3, 'nome': 'SAJ'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJSP\n2025-01-10T17:30:41.793Z\nJE\n2025-02-07T17:38:06.012900843Z\n2023-04-26T11:27:34.000Z\nTJSP_JE_10092161720238260016\n0\n{'codigo': 10608, 'nome': '02 VARA JUIZADO ESP...\n[{'codigo': 8893, 'nome': 'Atos Processuais'}]\n\n\n1\n{'codigo': 202, 'nome': 'Agravo de Instrumento'}\n00665754820248190000\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJRJ\n2025-05-08T14:03:27.957Z\nG2\n2025-05-29T22:14:11.517670660Z\n2024-08-16T15:07:06.000Z\nTJRJ_G2_00665754820248190000\n0\n{'codigoMunicipioIBGE': 3304557, 'codigo': 856...\n[{'codigo': 10499, 'nome': 'Programa de Comput...\n\n\n\n\n\n\n\n\nlistagem = datajud.listar_processos(classe = '282', tribunal = 'TJRJ', mostrar_movs=False, paginas=range(0,15))\n\nprint(listagem.shape)\nlistagem.head(3)\n\n\n\n\n(15000, 13)\n\n\n\n\n\n\n\n\n\nclasse\nnumeroProcesso\nsistema\nformato\ntribunal\ndataHoraUltimaAtualizacao\ngrau\n@timestamp\ndataAjuizamento\nid\nnivelSigilo\norgaoJulgador\nassuntos\n\n\n\n\n0\n{'codigo': 282, 'nome': 'Ação Penal de Competê...\n00003298920088190078\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 2, 'nome': 'Físico'}\nTJRJ\n2023-08-15T08:01:14.384Z\nG1\n2025-06-15T21:21:53.344048218Z\n2009-11-09T00:00:00.000Z\nTJRJ_282_G1_11376_00003298920088190078\n0\n{'codigoMunicipioIBGE': 3300233, 'codigo': 113...\n[{'codigo': 3370, 'nome': 'Homicídio Simples'}]\n\n\n1\n{'codigo': 282, 'nome': 'Ação Penal de Competê...\n00004872720208190078\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJRJ\n2022-09-15T03:39:05.718Z\nG1\n2025-06-17T10:58:18.440836740Z\n2020-02-21T00:00:00.000Z\nTJRJ_282_G1_11376_00004872720208190078\n0\n{'codigoMunicipioIBGE': 3300233, 'codigo': 113...\n[{'codigo': 3372, 'nome': 'Homicídio Qualifica...\n\n\n2\n{'codigo': 282, 'nome': 'Ação Penal de Competê...\n00004880820038190078\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 2, 'nome': 'Físico'}\nTJRJ\n2023-08-31T03:10:45.783Z\nG1\n2025-06-15T22:43:25.312100568Z\n2003-04-01T00:00:00.000Z\nTJRJ_282_G1_11376_00004880820038190078\n0\n{'codigoMunicipioIBGE': 3300233, 'codigo': 113...\n[{'codigo': 3372, 'nome': 'Homicídio Qualifica...\n\n\n\n\n\n\n\n\nlistagem = datajud.listar_processos(\n    assuntos = [12503], \n    mostrar_movs=False, \n    tribunal = 'TJMG'\n)\n\nlistagem.head(3)\n\n\n\n\n\n\n\n\n\n\n\nnumeroProcesso\nclasse\nsistema\nformato\ntribunal\ndataHoraUltimaAtualizacao\ngrau\n@timestamp\ndataAjuizamento\nid\nnivelSigilo\norgaoJulgador\nassuntos\n\n\n\n\n0\n08269787520228130000\n{'codigo': 1032, 'nome': 'Recurso Especial'}\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJMG\n2023-07-30T01:26:23.606Z\nG2\n2025-06-16T01:29:32.570005493Z\n2023-06-14T17:54:25.000Z\nTJMG_1032_G2_45131_08269787520228130000\n0\n{'codigoMunicipioIBGE': 3148004, 'codigo': 451...\n[{'codigo': 12503, 'nome': 'Urgência'}]\n\n\n1\n19624280720218130000\n{'codigo': 1032, 'nome': 'Recurso Especial'}\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJMG\n2023-07-30T01:23:45.279Z\nG2\n2025-06-16T01:29:02.987771094Z\n2022-01-13T11:17:11.000Z\nTJMG_1032_G2_45131_19624280720218130000\n0\n{'codigoMunicipioIBGE': 3123908, 'codigo': 451...\n[{'codigo': 12501, 'nome': 'Cirurgia'}, {'codi...\n\n\n2\n23863698120228130000\n{'codigo': 1032, 'nome': 'Recurso Especial'}\n{'codigo': 8, 'nome': 'Outros'}\n{'codigo': 1, 'nome': 'Eletrônico'}\nTJMG\n2024-02-11T17:29:59.828Z\nG2\n2025-06-16T05:53:30.201277270Z\n2023-09-05T15:13:20.000Z\nTJMG_1032_G2_45131_23863698120228130000\n0\n{'codigoMunicipioIBGE': 3147006, 'codigo': 451...\n[{'codigo': 12501, 'nome': 'Cirurgia'}, {'codi...",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Datajud"
    ]
  },
  {
    "objectID": "notebooks/jusbr.html",
    "href": "notebooks/jusbr.html",
    "title": "Baixando dados e documentos com o Jus.br",
    "section": "",
    "text": "Este notebook demonstra como autenticar e obter um token de acesso para o portal JUSBR usando a classe JUSBR_Scraper.\nimport juscraper as jus\nimport json\n\njusbr = jus.scraper(\"jusbr\")",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Jus.br"
    ]
  },
  {
    "objectID": "notebooks/jusbr.html#autenticação-manual-via-gov.br",
    "href": "notebooks/jusbr.html#autenticação-manual-via-gov.br",
    "title": "Baixando dados e documentos com o Jus.br",
    "section": "Autenticação manual via gov.br",
    "text": "Autenticação manual via gov.br\n\nAcesse https://www.jus.br\nFaça login usando o gov.br\nEntre na página https://portaldeservicos.pdpj.jus.br/consulta (ou clique no botão ‘Consultar processo’, que aparece após o login)\nNa nova página, abra a aba Network do navegador (F12 ou ‘Inspecionar elemento’)\nAtualize a página (F5 ou ctrl+R ou no botão atualizar)\nNas requisições que vão aparecer, procure a requisição que tem nome ‘token’. Clique nela.\nNa tela ao lado, clique em ‘Resposta’.\nSelecione e copie o campo ‘access_token’ que aparece lá.\n\n\nimport os\nfrom dotenv import load_dotenv\nfrom getpass import getpass\n\nload_dotenv()\n\naccess_token = os.environ.get(\"JUSBR_ACCESS_TOKEN\")\nif access_token is None:\n    # input como senha oculta\n    access_token = getpass(\"Digite o token JWT: \")\n\n\n\njusbr.auth(token=access_token)\n\nTrue",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Jus.br"
    ]
  },
  {
    "objectID": "notebooks/jusbr.html#baixando-metadados-dos-processos",
    "href": "notebooks/jusbr.html#baixando-metadados-dos-processos",
    "title": "Baixando dados e documentos com o Jus.br",
    "section": "Baixando metadados dos processos",
    "text": "Baixando metadados dos processos\nBaixando uma lista de casos:\n\nprocessos = ['15006452620228260536']\n\nresultados = jusbr.cpopg(processos)\n\nresultados\n\n\n\n\n\n\n\n\nprocesso\nnumeroProcesso\nidCodexTribunal\ndetalhes\n\n\n\n\n0\n15006452620228260536\n1500645-26.2022.8.26.0536\nNone\n{'nivelSigilo': 0, 'siglaTribunal': 'TJSP', 'n...\n\n\n\n\n\n\n\n\nresult_list = resultados['detalhes'].iloc[0]\n\nprint(json.dumps(result_list['tramitacaoAtual']['grau'], indent=2, ensure_ascii=False))\n\n{\n  \"sigla\": \"G1\",\n  \"nome\": \"1° Grau\",\n  \"numero\": 1\n}\n\n\nSe quiser visualizar o texto do caso:",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Jus.br"
    ]
  },
  {
    "objectID": "notebooks/jusbr.html#baixando-autos-dos-processos",
    "href": "notebooks/jusbr.html#baixando-autos-dos-processos",
    "title": "Baixando dados e documentos com o Jus.br",
    "section": "Baixando autos dos processos",
    "text": "Baixando autos dos processos\n\ndf_docs = jusbr.download_documents(resultados)\n\nprint(df_docs.shape)\ndf_docs.head(3)\n\n(16, 17)\n\n\n\n\n\n\n\n\n\nnumero_processo\nidCodex\nsequencia\nnome\ntipo\ndataHoraJuntada\nnivelSigilo\nhrefTexto\nhrefBinario\ntexto\n_raw_text_api\narquivo\nidOrigem\nidDocumento\ndescricao\ntipoDocumento\ndataJuntada\n\n\n\n\n0\n1500645-26.2022.8.26.0536\n25517068555\n219\nAto_Ordinatrio.pdf\n{'codigo': 14575, 'nome': 'Ato Ordinatório', '...\n2025-06-02T12:18:44\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\nNaN\nPG5SANT_221099183_0\nNone\nNone\nNone\nNone\n\n\n1\n1500645-26.2022.8.26.0536\n25240498715\n206\nDeciso.pdf\n{'codigo': 404, 'nome': 'Decisão', 'idCodex': ...\n2025-05-06T17:42:26\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\n{'tipo': 'text/richtext', 'quantidadePaginas':...\nPG5SANT_218747833_0\nNone\nNone\nNone\nNone\n\n\n2\n1500645-26.2022.8.26.0536\n24373093626\n196\nAto_Ordinatrio.pdf\n{'codigo': 14575, 'nome': 'Ato Ordinatório', '...\n2025-03-11T12:39:13\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\n{'tipo': 'text/richtext', 'quantidadePaginas':...\nPG5SANT_214809578_0\nNone\nNone\nNone\nNone\n\n\n\n\n\n\n\n\ndf_docs.head(3)\n\n\n\n\n\n\n\n\nnumero_processo\nidCodex\nsequencia\nnome\ntipo\ndataHoraJuntada\nnivelSigilo\nhrefTexto\nhrefBinario\ntexto\n_raw_text_api\narquivo\nidOrigem\nidDocumento\ndescricao\ntipoDocumento\ndataJuntada\n\n\n\n\n0\n1500645-26.2022.8.26.0536\n25517068555\n219\nAto_Ordinatrio.pdf\n{'codigo': 14575, 'nome': 'Ato Ordinatório', '...\n2025-06-02T12:18:44\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\nNaN\nPG5SANT_221099183_0\nNone\nNone\nNone\nNone\n\n\n1\n1500645-26.2022.8.26.0536\n25240498715\n206\nDeciso.pdf\n{'codigo': 404, 'nome': 'Decisão', 'idCodex': ...\n2025-05-06T17:42:26\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\n{'tipo': 'text/richtext', 'quantidadePaginas':...\nPG5SANT_218747833_0\nNone\nNone\nNone\nNone\n\n\n2\n1500645-26.2022.8.26.0536\n24373093626\n196\nAto_Ordinatrio.pdf\n{'codigo': 14575, 'nome': 'Ato Ordinatório', '...\n2025-03-11T12:39:13\nPUBLICO\n/processos/1500645-26.2022.8.26.0536/documento...\n/processos/1500645-26.2022.8.26.0536/documento...\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\nCO...\n\\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\\n...\n{'tipo': 'text/richtext', 'quantidadePaginas':...\nPG5SANT_214809578_0\nNone\nNone\nNone\nNone\n\n\n\n\n\n\n\n\nprint(df_docs['texto'][0][:200])\n\nTRIBUNAL DE JUSTIÇA DO ESTADO DE SÃO PAULO\nCOMARCA de São Vicente\nForo de São Vicente\n1ª Vara Criminal\nRua Jacob Emmerich, 1367, Sala 13, Parque Bitarú - CEP 11310-906, Fone: (13) 2102-6454, São Vicen",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Jus.br"
    ]
  },
  {
    "objectID": "notebooks/jusbr.html#baixando-uma-lista-grande-de-processos",
    "href": "notebooks/jusbr.html#baixando-uma-lista-grande-de-processos",
    "title": "Baixando dados e documentos com o Jus.br",
    "section": "Baixando uma lista grande de processos",
    "text": "Baixando uma lista grande de processos\nSe a lista de processos é muito grande, pode ser uma boa prática baixar um processo por vez e salvar os resultados em um arquivo parquet, por exemplo.\nNo script abaixo, criamos uma pasta dentro da pasta atual, chamada jusbr/cpopg/. Ali dentro, para cada processo, criamos uma pasta com o número do processo e salvamos 2 arquivos: 1 com os metadados daquele processo e 1 com os textos dos documentos. A chave para juntar as duas bases é o número do processo.\n\nimport os\nimport pandas as pd\nfrom tqdm import tqdm\nfrom joblib import Parallel, delayed\n\nprocessos = ['15006452620228260536']\n\nresultados = jusbr.cpopg(processos)\n\n\n\ndef download_document(proc_no, jusbr, verbose=True):\n    if verbose:\n        print(f\"Baixando documentos do processo {proc_no}\\n\")\n    \n    resultado = jusbr.cpopg([proc_no])\n    row = resultado.iloc[0]\n    processo = row['processo']\n    row_df = pd.DataFrame([row])\n    # cria a pasta\n    process_path = os.path.join('jusbr/cpopg', processo)\n    os.makedirs(process_path, exist_ok=True)\n    \n    # baixa documentos do processo\n    if verbose:\n        print(f\"Baixando autos do processo {proc_no}\\n\")\n    \n    df_docs = jusbr.download_documents(row_df)\n    #df_docs = pd.DataFrame()\n    # salva documentos\n    df_docs.to_parquet(os.path.join(process_path, 'documents.parquet'), index=False)\n    # salva metadata\n    row_df.to_parquet(os.path.join(process_path, 'metadata.parquet'), index=False)\n\nfor proc_no in processos:\n    download_document(proc_no, jusbr)\n\nBaixando documentos do processo 15006452620228260536\n\nBaixando autos do processo 15006452620228260536",
    "crumbs": [
      "Home",
      "Exemplos",
      "Agregadores",
      "Jus.br"
    ]
  },
  {
    "objectID": "notebooks/tjdft.html",
    "href": "notebooks/tjdft.html",
    "title": "juscraper",
    "section": "",
    "text": "import juscraper as jus\n\n# cria um objeto tjdft\ntjdft = jus.scraper('tjdft')\n\n\n# baixa dados da jurisprudência\ndados_cjsg = tjdft.cjsg('direito penal', paginas=range(0,3))\n\nprint(dados_cjsg.shape)\ndados_cjsg.head(3)\n\n(30, 23)\n\n\n\n\n\n\n\n\n\nsequencial\nbase\nsubbase\nuuid\nidentificador\ndataJulgamento\ndataPublicacao\ndecisao\nementa\nlocalDePublicacao\n...\nuf\nsegredoJustica\nturmaRecursal\ndescricaoOrgaoJulgador\nversao\ncodigoClasseCnj\ncodigoSistjOrgaoJulgador\ninteiroTeorHtml\nmarcadores\npossuiInteiroTeor\n\n\n\n\n0\n1\nacordaos\nacordaos\n23362ccf-ffc5-4caf-b878-de1f671250f5\n1998487\n2025-05-15T03:00:00.000Z\n2025-05-24T23:26:53.000Z\nNEGAR PROVIMENTO AO RECURSO. UNÂNIME\nEMENTA: DIREITO PENAL. EMBARGOS DE DECLARAÇÃO....\nPJe\n...\nDF\nFalse\nFalse\n1ª TURMA CRIMINAL\n01\n420\n51\nInteiro Teor indisponível.\n{'ementa': ['EMENTA: &lt;mark&gt;DIREITO&lt;/mark&gt; &lt;mar...\nTrue\n\n\n1\n2\nacordaos\nacordaos\n298272b3-1dd9-41c0-8f93-f29edd0d8cef\n1999112\n2025-05-15T03:00:00.000Z\n2025-05-24T23:22:29.000Z\nNEGAR PROVIMENTO. UNÂNIME.\nEmenta: direito penal. Apelação criminal. Injú...\nPJe\n...\nDF\nFalse\nFalse\n2ª TURMA CRIMINAL\n01\n417\n52\nInteiro Teor indisponível.\n{'ementa': ['Ementa: &lt;mark&gt;direito&lt;/mark&gt; &lt;mar...\nTrue\n\n\n2\n3\nacordaos\nacordaos\nee320b08-c91f-489f-8dba-1dc80b63fff7\n1998988\n2025-05-15T03:00:00.000Z\n2025-05-24T20:52:42.000Z\nNEGAR PROVIMENTO. UNÂNIME.\nEmenta: DIREITO PENAL. APELAÇÃO CRIMINAL. RECE...\nPJe\n...\nDF\nFalse\nFalse\n2ª TURMA CRIMINAL\n01\n417\n52\nInteiro Teor indisponível.\n{'ementa': ['Ementa: &lt;mark&gt;DIREITO&lt;/mark&gt; &lt;mar...\nTrue\n\n\n\n\n3 rows × 23 columns\n\n\n\n\nprint(dados_cjsg['ementa'].iloc[0][:300])\n\nEMENTA: DIREITO PENAL. EMBARGOS DE DECLARAÇÃO. PRETENSÃO DE REDISCUSSÃO DA MATÉRIA. INOVAÇÃO RECURSAL. IMPOSSIBILIDADE. VÍCIO. AUSENTE. MEIO PROCESSUAL INADEQUADO. PREQUESTIONAMENTO. EMBARGOS REJEITADOS.\n\nI. CASO EM EXAME\n\n1. Embargos de declaração opostos contra acórdão que negou provimento ao recu\n\n\n\ndados_cjsg['processo'].iloc[0]\n\n'0722443-83.2024.8.07.0003'",
    "crumbs": [
      "Home",
      "Exemplos",
      "Tribunais",
      "TJDFT"
    ]
  },
  {
    "objectID": "reference/courts.tjsp.client.TJSPScraper.html",
    "href": "reference/courts.tjsp.client.TJSPScraper.html",
    "title": "courts.tjsp.client.TJSPScraper",
    "section": "",
    "text": "courts.tjsp.client.TJSPScraper(\n    verbose=0,\n    download_path=None,\n    sleep_time=0.5,\n    **kwargs,\n)\nMain scraper for Tribunal de Justica de Sao Paulo.\n\n\n\n\n\nName\nDescription\n\n\n\n\ncjpg\nOrchestrates the download and parsing of processes from CJPG.\n\n\ncjpg_download\nDownloads the processes from the TJSP jurisprudence.\n\n\ncjpg_parse\nWrapper for parsing downloaded files from CJPG.\n\n\ncjsg\nOrchestrates the download and parsing of processes from CJSG.\n\n\ncjsg_download\nDownloads the HTML files of the pages of results of the\n\n\ncjsg_parse\nWrapper for parsing downloaded files from CJSG.\n\n\ncpopg\nScrapes a process from Primeiro Grau (CPOPG).\n\n\ncpopg_download\nDownloads a process from Primeiro Grau (CPOPG).\n\n\ncpopg_parse\nWrapper for parsing downloaded files from CPOPG.\n\n\ncposg\nOrchestrates the download and parsing of processes from Segundo Grau (CPOSG).\n\n\ncposg_download\nDownloads processes from Segundo Grau (CPOSG), via HTML or API, using modularized functions.\n\n\ncposg_parse\nWrapper for parsing downloaded files from CPOSG.\n\n\nset_download_path\nSets the base directory for saving downloaded files.\n\n\nset_method\nSets the method for accessing TJSP data.\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg(\n    pesquisa='',\n    classes=None,\n    assuntos=None,\n    varas=None,\n    id_processo=None,\n    data_inicio=None,\n    data_fim=None,\n    paginas=None,\n)\nOrchestrates the download and parsing of processes from CJPG.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nThe search term. Default is “” (empty string).\n''\n\n\nclasses\nlist[str]\nList of classes of the process. Default is None.\nNone\n\n\nassuntos\nlist[str]\nList of subjects of the process. Default is None.\nNone\n\n\nvaras\nlist[str]\nList of varas of the process. Default is None.\nNone\n\n\nid_processo\nstr\nID of the process. Default is None.\nNone\n\n\ndata_inicio\nstr\nStart date of the search. Default is None.\nNone\n\n\ndata_fim\nstr\nEnd date of the search. Default is None.\nNone\n\n\npaginas\nrange\nRange of pages to download. Default is None.\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg_download(\n    pesquisa,\n    classes=None,\n    assuntos=None,\n    varas=None,\n    id_processo=None,\n    data_inicio=None,\n    data_fim=None,\n    paginas=None,\n)\nDownloads the processes from the TJSP jurisprudence.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nThe search term.\nrequired\n\n\nclasses\nlist[str]\nList of classes of the process. Default is None.\nNone\n\n\nassuntos\nlist[str]\nList of subjects of the process. Default is None.\nNone\n\n\nvaras\nlist[str]\nList of varas of the process. Default is None.\nNone\n\n\nid_processo\nstr\nID of the process. Default is None.\nNone\n\n\ndata_inicio\nstr\nStart date of the search. Default is None.\nNone\n\n\ndata_fim\nstr\nEnd date of the search. Default is None.\nNone\n\n\npaginas\nrange\nPages to download. Default is None.\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg_parse(path)\nWrapper for parsing downloaded files from CJPG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg(\n    pesquisa,\n    ementa=None,\n    classe=None,\n    assunto=None,\n    comarca=None,\n    orgao_julgador=None,\n    data_inicio=None,\n    data_fim=None,\n    baixar_sg=True,\n    tipo_decisao='acordao',\n    paginas=None,\n)\nOrchestrates the download and parsing of processes from CJSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg_download(\n    pesquisa,\n    ementa=None,\n    classe=None,\n    assunto=None,\n    comarca=None,\n    orgao_julgador=None,\n    data_inicio=None,\n    data_fim=None,\n    baixar_sg=True,\n    tipo_decisao='acordao',\n    paginas=None,\n)\nDownloads the HTML files of the pages of results of the Second Stage Judgment Consultation (CJSG).\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nSearch term.\nrequired\n\n\nementa\nstr\nFilter by text of the ementa.\nNone\n\n\nclasse\nstr | None\nClass of the process.\nNone\n\n\nassunto\nstr | None\nSubject of the process.\nNone\n\n\ncomarca\nstr | None\nCourt of the process.\nNone\n\n\norgao_julgador\nstr | None\nCourt of appeal of the process.\nNone\n\n\ndata_inicio\nstr | None\nStart date of the process.\nNone\n\n\ndata_fim\nstr | None\nEnd date of the process.\nNone\n\n\nbaixar_sg\nbool\nIf True, also downloads from Second Stage.\nTrue\n\n\ntipo_decisao\nstr\n‘acordao’ or ‘monocratica’.\n'acordao'\n\n\npaginas\nrange\nRange of pages to download.\nNone\n\n\n\nNOTE: range(0, n) downloads pages 1 to n (inclusive), following the user’s expectation (example: range(0,3) downloads pages 1, 2 and 3).\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg_parse(path)\nWrapper for parsing downloaded files from CJSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg(id_cnj, method='html')\nScrapes a process from Primeiro Grau (CPOPG).\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg_download(id_cnj, method='html')\nDownloads a process from Primeiro Grau (CPOPG).\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nid_cnj\nUnion[str, List[str]]\nstring with the CNJ of the process, or list of strings with CNJs.\nrequired\n\n\nmethod\nLiteral['html', 'api']\nLiteral[‘html’, ‘api’]. The methods supported are ‘html’ and ‘api’. The default is ‘html’.\n'html'\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nException\nIf the method passed as parameter is not ‘html’ or ‘api’.\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg_parse(path)\nWrapper for parsing downloaded files from CPOPG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg(id_cnj, method='html')\nOrchestrates the download and parsing of processes from Segundo Grau (CPOSG).\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg_download(id_cnj, method='html')\nDownloads processes from Segundo Grau (CPOSG), via HTML or API, using modularized functions.\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg_parse(path)\nWrapper for parsing downloaded files from CPOSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.set_download_path(path=None)\nSets the base directory for saving downloaded files.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\nstr\nPath to save downloaded files. Default is None (uses temporary directory).\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.set_method(method)\nSets the method for accessing TJSP data.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmethod\nLiteral['html', 'api']\nLiteral[‘html’, ‘api’]. The methods supported are ‘html’ and ‘api’.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nException\nIf the method is not ‘html’ or ‘api’."
  },
  {
    "objectID": "reference/courts.tjsp.client.TJSPScraper.html#methods",
    "href": "reference/courts.tjsp.client.TJSPScraper.html#methods",
    "title": "courts.tjsp.client.TJSPScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncjpg\nOrchestrates the download and parsing of processes from CJPG.\n\n\ncjpg_download\nDownloads the processes from the TJSP jurisprudence.\n\n\ncjpg_parse\nWrapper for parsing downloaded files from CJPG.\n\n\ncjsg\nOrchestrates the download and parsing of processes from CJSG.\n\n\ncjsg_download\nDownloads the HTML files of the pages of results of the\n\n\ncjsg_parse\nWrapper for parsing downloaded files from CJSG.\n\n\ncpopg\nScrapes a process from Primeiro Grau (CPOPG).\n\n\ncpopg_download\nDownloads a process from Primeiro Grau (CPOPG).\n\n\ncpopg_parse\nWrapper for parsing downloaded files from CPOPG.\n\n\ncposg\nOrchestrates the download and parsing of processes from Segundo Grau (CPOSG).\n\n\ncposg_download\nDownloads processes from Segundo Grau (CPOSG), via HTML or API, using modularized functions.\n\n\ncposg_parse\nWrapper for parsing downloaded files from CPOSG.\n\n\nset_download_path\nSets the base directory for saving downloaded files.\n\n\nset_method\nSets the method for accessing TJSP data.\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg(\n    pesquisa='',\n    classes=None,\n    assuntos=None,\n    varas=None,\n    id_processo=None,\n    data_inicio=None,\n    data_fim=None,\n    paginas=None,\n)\nOrchestrates the download and parsing of processes from CJPG.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nThe search term. Default is “” (empty string).\n''\n\n\nclasses\nlist[str]\nList of classes of the process. Default is None.\nNone\n\n\nassuntos\nlist[str]\nList of subjects of the process. Default is None.\nNone\n\n\nvaras\nlist[str]\nList of varas of the process. Default is None.\nNone\n\n\nid_processo\nstr\nID of the process. Default is None.\nNone\n\n\ndata_inicio\nstr\nStart date of the search. Default is None.\nNone\n\n\ndata_fim\nstr\nEnd date of the search. Default is None.\nNone\n\n\npaginas\nrange\nRange of pages to download. Default is None.\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg_download(\n    pesquisa,\n    classes=None,\n    assuntos=None,\n    varas=None,\n    id_processo=None,\n    data_inicio=None,\n    data_fim=None,\n    paginas=None,\n)\nDownloads the processes from the TJSP jurisprudence.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nThe search term.\nrequired\n\n\nclasses\nlist[str]\nList of classes of the process. Default is None.\nNone\n\n\nassuntos\nlist[str]\nList of subjects of the process. Default is None.\nNone\n\n\nvaras\nlist[str]\nList of varas of the process. Default is None.\nNone\n\n\nid_processo\nstr\nID of the process. Default is None.\nNone\n\n\ndata_inicio\nstr\nStart date of the search. Default is None.\nNone\n\n\ndata_fim\nstr\nEnd date of the search. Default is None.\nNone\n\n\npaginas\nrange\nPages to download. Default is None.\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjpg_parse(path)\nWrapper for parsing downloaded files from CJPG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg(\n    pesquisa,\n    ementa=None,\n    classe=None,\n    assunto=None,\n    comarca=None,\n    orgao_julgador=None,\n    data_inicio=None,\n    data_fim=None,\n    baixar_sg=True,\n    tipo_decisao='acordao',\n    paginas=None,\n)\nOrchestrates the download and parsing of processes from CJSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg_download(\n    pesquisa,\n    ementa=None,\n    classe=None,\n    assunto=None,\n    comarca=None,\n    orgao_julgador=None,\n    data_inicio=None,\n    data_fim=None,\n    baixar_sg=True,\n    tipo_decisao='acordao',\n    paginas=None,\n)\nDownloads the HTML files of the pages of results of the Second Stage Judgment Consultation (CJSG).\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npesquisa\nstr\nSearch term.\nrequired\n\n\nementa\nstr\nFilter by text of the ementa.\nNone\n\n\nclasse\nstr | None\nClass of the process.\nNone\n\n\nassunto\nstr | None\nSubject of the process.\nNone\n\n\ncomarca\nstr | None\nCourt of the process.\nNone\n\n\norgao_julgador\nstr | None\nCourt of appeal of the process.\nNone\n\n\ndata_inicio\nstr | None\nStart date of the process.\nNone\n\n\ndata_fim\nstr | None\nEnd date of the process.\nNone\n\n\nbaixar_sg\nbool\nIf True, also downloads from Second Stage.\nTrue\n\n\ntipo_decisao\nstr\n‘acordao’ or ‘monocratica’.\n'acordao'\n\n\npaginas\nrange\nRange of pages to download.\nNone\n\n\n\nNOTE: range(0, n) downloads pages 1 to n (inclusive), following the user’s expectation (example: range(0,3) downloads pages 1, 2 and 3).\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cjsg_parse(path)\nWrapper for parsing downloaded files from CJSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg(id_cnj, method='html')\nScrapes a process from Primeiro Grau (CPOPG).\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg_download(id_cnj, method='html')\nDownloads a process from Primeiro Grau (CPOPG).\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nid_cnj\nUnion[str, List[str]]\nstring with the CNJ of the process, or list of strings with CNJs.\nrequired\n\n\nmethod\nLiteral['html', 'api']\nLiteral[‘html’, ‘api’]. The methods supported are ‘html’ and ‘api’. The default is ‘html’.\n'html'\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nException\nIf the method passed as parameter is not ‘html’ or ‘api’.\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.cpopg_parse(path)\nWrapper for parsing downloaded files from CPOPG.\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg(id_cnj, method='html')\nOrchestrates the download and parsing of processes from Segundo Grau (CPOSG).\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg_download(id_cnj, method='html')\nDownloads processes from Segundo Grau (CPOSG), via HTML or API, using modularized functions.\n\n\n\ncourts.tjsp.client.TJSPScraper.cposg_parse(path)\nWrapper for parsing downloaded files from CPOSG.\n\n\n\ncourts.tjsp.client.TJSPScraper.set_download_path(path=None)\nSets the base directory for saving downloaded files.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npath\nstr\nPath to save downloaded files. Default is None (uses temporary directory).\nNone\n\n\n\n\n\n\n\ncourts.tjsp.client.TJSPScraper.set_method(method)\nSets the method for accessing TJSP data.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nmethod\nLiteral['html', 'api']\nLiteral[‘html’, ‘api’]. The methods supported are ‘html’ and ‘api’.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nException\nIf the method is not ‘html’ or ‘api’."
  },
  {
    "objectID": "reference/courts.tjdft.client.TJDFTScraper.html",
    "href": "reference/courts.tjdft.client.TJDFTScraper.html",
    "title": "courts.tjdft.client.TJDFTScraper",
    "section": "",
    "text": "courts.tjdft.client.TJDFTScraper()\nScraper for the Court of Justice of the Federal District and Territories (TJDFT).\n\n\n\n\n\nName\nDescription\n\n\n\n\ncjsg\nSearches for TJDFT jurisprudence in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw search results from the TJDFT jurisprudence search (using requests).\n\n\ncjsg_parse\nExtracts structured information from the raw TJDFT search results.\n\n\ncpopg\nStub for compatibility with BaseScraper.\n\n\ncposg\nStub for compatibility with BaseScraper.\n\n\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg(query, paginas=0)\nSearches for TJDFT jurisprudence in a simplified way (download + parse). Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg_download(\n    query,\n    paginas=0,\n    sinonimos=True,\n    espelho=True,\n    inteiro_teor=False,\n    quantidade_por_pagina=10,\n)\nDownloads raw search results from the TJDFT jurisprudence search (using requests). Returns a list of raw results (JSON).\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg_parse(resultados_brutos)\nExtracts structured information from the raw TJDFT search results. Returns all fields present in each item.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cpopg(id_cnj)\nStub for compatibility with BaseScraper.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cposg(id_cnj)\nStub for compatibility with BaseScraper."
  },
  {
    "objectID": "reference/courts.tjdft.client.TJDFTScraper.html#methods",
    "href": "reference/courts.tjdft.client.TJDFTScraper.html#methods",
    "title": "courts.tjdft.client.TJDFTScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncjsg\nSearches for TJDFT jurisprudence in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw search results from the TJDFT jurisprudence search (using requests).\n\n\ncjsg_parse\nExtracts structured information from the raw TJDFT search results.\n\n\ncpopg\nStub for compatibility with BaseScraper.\n\n\ncposg\nStub for compatibility with BaseScraper.\n\n\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg(query, paginas=0)\nSearches for TJDFT jurisprudence in a simplified way (download + parse). Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg_download(\n    query,\n    paginas=0,\n    sinonimos=True,\n    espelho=True,\n    inteiro_teor=False,\n    quantidade_por_pagina=10,\n)\nDownloads raw search results from the TJDFT jurisprudence search (using requests). Returns a list of raw results (JSON).\n\n\n\ncourts.tjdft.client.TJDFTScraper.cjsg_parse(resultados_brutos)\nExtracts structured information from the raw TJDFT search results. Returns all fields present in each item.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cpopg(id_cnj)\nStub for compatibility with BaseScraper.\n\n\n\ncourts.tjdft.client.TJDFTScraper.cposg(id_cnj)\nStub for compatibility with BaseScraper."
  },
  {
    "objectID": "reference/aggregators.datajud.client.DatajudScraper.html",
    "href": "reference/aggregators.datajud.client.DatajudScraper.html",
    "title": "aggregators.datajud.client.DatajudScraper",
    "section": "",
    "text": "aggregators.datajud.client.DatajudScraper(\n    api_key=None,\n    verbose=1,\n    download_path=None,\n    sleep_time=0.5,\n)\nScraper for CNJ’s Datajud API.\n\n\n\n\n\nName\nDescription\n\n\n\n\nlistar_processos\nLists processes from Datajud via API, with support for multiple filters and pagination.\n\n\n\n\n\naggregators.datajud.client.DatajudScraper.listar_processos(\n    numero_processo=None,\n    tribunal=None,\n    ano_ajuizamento=None,\n    classe=None,\n    assuntos=None,\n    mostrar_movs=False,\n    paginas=None,\n    tamanho_pagina=1000,\n)\nLists processes from Datajud via API, with support for multiple filters and pagination."
  },
  {
    "objectID": "reference/aggregators.datajud.client.DatajudScraper.html#methods",
    "href": "reference/aggregators.datajud.client.DatajudScraper.html#methods",
    "title": "aggregators.datajud.client.DatajudScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nlistar_processos\nLists processes from Datajud via API, with support for multiple filters and pagination.\n\n\n\n\n\naggregators.datajud.client.DatajudScraper.listar_processos(\n    numero_processo=None,\n    tribunal=None,\n    ano_ajuizamento=None,\n    classe=None,\n    assuntos=None,\n    mostrar_movs=False,\n    paginas=None,\n    tamanho_pagina=1000,\n)\nLists processes from Datajud via API, with support for multiple filters and pagination."
  },
  {
    "objectID": "reference/courts.tjrs.client.TJRSScraper.html",
    "href": "reference/courts.tjrs.client.TJRSScraper.html",
    "title": "courts.tjrs.client.TJRSScraper",
    "section": "",
    "text": "courts.tjrs.client.TJRSScraper()\nScraper for the Tribunal de Justiça do Rio Grande do Sul.\n\n\n\n\n\nName\nDescription\n\n\n\n\ncjsg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw results from the TJRS ‘jurisprudence search’ (multiple pages).\n\n\ncjsg_parse\nExtracts relevant data from the raw results returned by TJRS.\n\n\ncpopg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\ncposg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg(\n    query,\n    paginas=1,\n    classe=None,\n    assunto=None,\n    orgao_julgador=None,\n    relator=None,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    tipo_processo=None,\n    secao=None,\n    session=None,\n    **kwargs,\n)\nFetches jurisprudence from TJRS in a simplified way (download + parse). New parameter: secao (‘civel’, ‘crime’, or None) Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg_download(\n    termo,\n    paginas=1,\n    classe=None,\n    assunto=None,\n    orgao_julgador=None,\n    relator=None,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    tipo_processo=None,\n    secao=None,\n    session=None,\n    **kwargs,\n)\nDownloads raw results from the TJRS ‘jurisprudence search’ (multiple pages). Returns a list of raw results (JSON). New parameter: secao (‘civel’, ‘crime’, or None)\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg_parse(resultados_brutos)\nExtracts relevant data from the raw results returned by TJRS. Returns a DataFrame with the decisions.\n\n\n\ncourts.tjrs.client.TJRSScraper.cpopg(id_cnj)\nFetches jurisprudence from TJRS in a simplified way (download + parse). Returns a DataFrame ready for analysis.\n\n\n\ncourts.tjrs.client.TJRSScraper.cposg(id_cnj)\nFetches jurisprudence from TJRS in a simplified way (download + parse). Returns a DataFrame ready for analysis."
  },
  {
    "objectID": "reference/courts.tjrs.client.TJRSScraper.html#methods",
    "href": "reference/courts.tjrs.client.TJRSScraper.html#methods",
    "title": "courts.tjrs.client.TJRSScraper",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncjsg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\ncjsg_download\nDownloads raw results from the TJRS ‘jurisprudence search’ (multiple pages).\n\n\ncjsg_parse\nExtracts relevant data from the raw results returned by TJRS.\n\n\ncpopg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\ncposg\nFetches jurisprudence from TJRS in a simplified way (download + parse).\n\n\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg(\n    query,\n    paginas=1,\n    classe=None,\n    assunto=None,\n    orgao_julgador=None,\n    relator=None,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    tipo_processo=None,\n    secao=None,\n    session=None,\n    **kwargs,\n)\nFetches jurisprudence from TJRS in a simplified way (download + parse). New parameter: secao (‘civel’, ‘crime’, or None) Returns a ready-to-analyze DataFrame.\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg_download(\n    termo,\n    paginas=1,\n    classe=None,\n    assunto=None,\n    orgao_julgador=None,\n    relator=None,\n    data_julgamento_de=None,\n    data_julgamento_ate=None,\n    data_publicacao_de=None,\n    data_publicacao_ate=None,\n    tipo_processo=None,\n    secao=None,\n    session=None,\n    **kwargs,\n)\nDownloads raw results from the TJRS ‘jurisprudence search’ (multiple pages). Returns a list of raw results (JSON). New parameter: secao (‘civel’, ‘crime’, or None)\n\n\n\ncourts.tjrs.client.TJRSScraper.cjsg_parse(resultados_brutos)\nExtracts relevant data from the raw results returned by TJRS. Returns a DataFrame with the decisions.\n\n\n\ncourts.tjrs.client.TJRSScraper.cpopg(id_cnj)\nFetches jurisprudence from TJRS in a simplified way (download + parse). Returns a DataFrame ready for analysis.\n\n\n\ncourts.tjrs.client.TJRSScraper.cposg(id_cnj)\nFetches jurisprudence from TJRS in a simplified way (download + parse). Returns a DataFrame ready for analysis."
  }
]